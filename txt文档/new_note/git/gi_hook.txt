实际情况：

1.创建 vi post-receive
写入下面的
#!/bin/sh
DEPLOY_PATH=/var/www/html/mygitwork
unset  GIT_DIR
cd $DEPLOY_PATH
sudo -u git git pull  /var/www/html/test.git master
echo "test.git hook working"

2.将权限部分都处理好
chmod +x post-receive
cd 工作目录下
chown -R git:git 文件名

注意：需要先将ssh-keygen配置好才能不要密码直接进行
	要注意权限者是git才好
	要注意工作区要设定好username、email

------------------------------分割线。。。---------------------------------
git hook实现代码自动部署
标签： git
2017-04-26 20:18 906人阅读 评论(0) 收藏 举报
 分类： git（1）  
版权声明：本文为博主原创文章，未经博主允许不得转载。
目录(?)[+]
原理与流程

git用户执行git push操作
远程仓库发现有用户执行了push操作，就会执行一个脚本post-receive（钩子）
在post-receive脚本中，将git仓库的代码拷贝到web站点目录下
创建git仓库

我们可以在自己的服务器上创建Git仓库，有两种方式：

git --bare init (裸仓库)
git init
两者区别：

普通git仓库的目录结构就和你的代码目录结构一致，只多了.git目录，.git目录中包含了git的一些配置等数据
裸仓库只保存了一些配置信息等，肉眼是找不到我们所上传的代码的
建议使用裸仓库

执行钩子

git仓库和git裸仓库的钩子所在位置不同。

git普通仓库钩子在.git/hooks/中
git裸仓库钩子在hooks/中
钩子要做的事就是将代码从仓库中拷贝到web目录，有两种方式：

在web目录中，将git仓库的代码克隆过来:git clone xxxxx，需要部署代码的时候，执行git pull即可将代码同步过来了。
将git仓库中的代码打包，然后解压到web目录下
实现：

第一种方式实现：

在上述hooks目录中，创建post-receive文件，内容如下

#!/bin/sh
DEPLOY_PATH=/home/wwwroot/default/myproject/

unset  GIT_DIR #这条命令很重要
cd $DEPLOY_PATH
git reset --hard
git pull
chown www:www -R $DEPLOY_PATH

第二种方式实现：

#!/bin/sh
DEPLOY_PATH=/home/wwwroot/default/myproject/

git archive --format zip --output /path/to/file.zip master # 将 master 以zip格式打包到指定文件（裸仓库中执行）
mv /path/to/file.zip $DEPLOY_PATH #将打包好的剪切到web目录
unset GIT_DIR
cd $DEPLOY_PATH
unzip -o file.zip #解压覆盖
rm -rf file.zip #删除
chown www:www -R $DEPLOY_PATH
注意：要给钩子脚本执行的权限


git pull  ssh://git@192.168.121.130/var/www/html/test.git master
