==>Smarty
-》模板引擎技术：可以使得"php代码"与"html代码"分离的技术都称为模板引擎技术。
-》四类软件开发人员：在一个项目里面，开发人员进行分工：
php程序员：负责php代码编写
美工：专门负责html+css代码编写
DBA（database administrator）数据库管理员：
系统维护人员：

如果一个页面里既有php代码，又有html代码，有可能造成美工与php程序员相互推诿的现象。

==》自定义模板引擎
php文件
模板文件
模板引擎文件
混编文件

-》在类的内部使用外部声明的变量。
解决：	1.使用常量（使用define声明常量信息）
	2.传递参数。
    -》两种方法都不可行，理由是不只一个应用需要使用MiniSmarty，
    还会有许多应用使用该模板引擎，并且大家使用的变量是不同的。
	3.通过global在方法内部声明全局变量，（也不行，变量太多）
	4.可以把模板引擎内部使用的变量信息，都声明为该“模板类”的属性信息
    ->4 可行

-》模板引擎接收方法
//给该类声明属性，用于存储外部的变量信息
	public $tpl_var=array();
	//把外部变量设置为类内部属性的一部分
	function assign($k,$v){
		$this->tpl_var[$k]=$v;
	}

	function compile($tpl){
		$cont=file_get_contents($tpl);
		/*//替换
		//替换 {  ----->  < ?php echo $this->tpl_var['
		//替换 }  ----->  ']; ?>*/
		$cont=str_replace("{\$","<?php echo \$this->tpl_var['",$cont);
		$cont=str_replace("}","'] ?>",$cont);
		//把生成好的编译内容（php+html混编内容）放入一个文件里边
		
		file_put_contents('./02.html.php',$cont);
		//引入混编文件
		require_once "02.html.php";
	}

		
==>模板引擎优化
混编文件一旦生成好，不要反复生成，直接引入即可
1。给每个应用都生成一个混编文件，执行之前先判断是否存在，如果存在就直接引入，不存在则再生成

2。如果对应的文件有修改，对应的混编文件要重新生成

==>正式smarty-》3.1.16

