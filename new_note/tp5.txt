--------------------------------------------------------------------------------
PHP
PHP有强大的Socket操作能力，它的处理方式更接近于C，但是没有C的繁琐。可以看作是对C操作的Socket的一个封装。
开启一个socket监听示例程序：
<?php//设置一些基本的变量
$host="192.168.1.99";//主机地址
$port=1234;//端口
//设置超时时间
set_time_limit(0);
//创建一个Socket
$socket=socket_create(AF_INET,SOCK_STREAM,0)ordie("Couldnotcreatesocket\n");//绑定Socket到端口
$result=socket_bind($socket,$host,$port)ordie("Couldnotbindtosocket\n");//开始监听链接
$result=socket_listen($socket,3)ordie("Couldnotsetupsocketlistener\n");//acceptincomingconnections
//另一个Socket来处理通信
$spawn=socket_accept($socket)ordie("Couldnotacceptincomingconnection\n");//获得客户端的输入
$input=socket_read($spawn,1024)ordie("Couldnotreadinput\n");//清空输入字符串
$input=trim($input);//处理客户端输入并返回结果
$output=strrev($input)."\n";
socket_write($spawn,$output,strlen($output))ordie("Couldnotwriteoutput\n");//关闭
socket_close($spawn);
socket_close($socket);

----------------------------------------------------------------------------------
  thinkphp/library/think/template.php

	'layout_on'          => true, // 布局模板开关
        'layout_name'        => 'layout', // 布局模板入口文件
        'layout_item'        => '{__REPLACE__}', // 

test
123


美容项目 
医院 去掉
导师


        $vi->level=Db::table('mariah_auth_level')->select();
        $info=Db::table('')->where()->select();
        if(count($info)){
            $url=URL_PATH."index/user/add_user_detail";
        }

